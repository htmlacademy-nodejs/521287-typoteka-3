mixin pagination(page, totalPages, width, prefix, className = '')
  -
    // Вычислим начальную и конечную страницу диапазона без учёта ограничений
    let start = page - width;
    let end = page + width;

    // Передвинем диапазон вправо, если он начинается с номера меньше единицы
    if (start < 1) {
      end += 1 - start;
      start = 1;
    }
    // Передвинем диапазон влево, если он заканчивается номером больше количества страниц
    if (end > totalPages) {
      start -= end - totalPages;
      end = totalPages;
    }
    // Если мы оказались в этой ветке, значит, всего страниц слишком мало.
    // Делаем начало диапазона 1
    if (start < 1) {
      start = 1;
    }

    let i = start - 1;

  style.
    .pagination__item--active {
      pointer-events: none;
    }

  if totalPages > 1
    ul(class=['pagination', className])
      li
        a(
          class={
            'pagination__button button button--backwards': true,
            'button--disabled': page === start,
          }
          href=`${prefix}page=${page - 1}`
          aria-label='Страница назад'
        ) Назад


      while i++ < end
        li(class={
          'pagination__item': true,
          'pagination__item--active': i === page
        })
          a(href=`${prefix}page=${i}`)= i
      
      li
        a(
          class={
            'pagination__button button button--forward': true,
            'button--disabled': page === end,
          }
          href=`${prefix}page=${page + 1}`
          aria-label='Страница вперед'
        ) Вперед